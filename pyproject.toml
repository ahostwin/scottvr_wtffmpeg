# This file configures the packaging for your Python project.
# Save this content as `pyproject.toml` in the root of your project directory,
# alongside your `wtffmpeg.py` script.

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "wtffmpeg"
version = "0.1.0"
description = "A command-line tool to translate natural language to ffmpeg commands using a local LLM."
# You can change the author name and email.
authors = [
  { name="Your Name", email="you@example.com" },
]
readme = "README.md" # It's good practice to have a README file.
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Multimedia :: Video :: Conversion",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# List your project's dependencies here.
dependencies = [
    # For hardware acceleration (like CUDA, Metal, etc.), it's recommended
    # to install llama-cpp-python manually first, following its documentation,
    # as this file cannot handle the complex build flags.
    # e.g., for CUDA: CMAKE_ARGS="-DLLAMA_CUBLAS=on" pip install llama-cpp-python
    "llama-cpp-python",
]

# This section creates the command-line script alias.
# When you run `pip install .`, it will create an executable named `wtff`
# in your virtual environment's bin/ directory. This executable will
# run the `main` function from the `wtffmpeg.py` script.
[project.scripts]
wtff = "wtffmpeg:main"

[project.urls]
"Homepage" = "https://github.com/scottvr/wtffmpeg" 
